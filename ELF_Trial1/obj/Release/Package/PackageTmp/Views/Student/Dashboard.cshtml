@model ELF_Trial1.Models.Student.StudentDashboard

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutStudent.cshtml";
}

<br />
<div>

    <style>
        body {
            overflow-x: hidden;
            overflow-y: scroll;
        }
    </style>

    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
            background-color: #555555;
            color: whitesmoke;
        }

        td, th {
            border: 0.1px solid #808080;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #555555;
        }
    </style>
    <script>
            function navinside(page) {
                window.location.href = '/Student/' + page;
            }
    </script>
    <style>
        canvas {
            -moz-user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
        }
    </style>
    <script>
            Chart.pluginService.register({
                beforeDraw: function (chart, easing) {
                    if (chart.config.options.chartArea && chart.config.options.chartArea.backgroundColor) {
                        var helpers = Chart.helpers;
                        var ctx = chart.chart.ctx;
                        var chartArea = chart.chartArea;

                        ctx.save();
                        ctx.fillStyle = chart.config.options.chartArea.backgroundColor;
                        ctx.fillRect(chartArea.left, chartArea.top, chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);
                        ctx.restore();
                    }
                }
            });

        $(document).ready(function() {
            var ctx = document.getElementById("canvas").getContext("2d");
            var myBarChart = new Chart(ctx, {
                type: 'bar',
                data: data,
                options: {
                    chartArea: {
                        backgroundColor: 'rgba(72,72,72,1)'
                    }
                }
            });
            
        });
        @{
            var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
            var Reportjson = serializer.Serialize(Model.SubjectPercentage);
        }

        var SubjectList =@Html.Raw(Reportjson);
        var SubjectNameList = [];
        var SubjectPercentageList = [];
        var subjectcount=SubjectList.length;
      
        for(i=0;i<subjectcount;i++)
        {
         
             SubjectNameList[i] = SubjectList[i].SubjectName;
            SubjectPercentageList[i] = SubjectList[i].Percentage;

        }

            var data = {
                labels: SubjectNameList,
                    datasets: [
                        {
            label: "Subject Percentage List",
                            backgroundColor: [
                                'rgba(251, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(119, 136, 153, 1)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(251,99,132,1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1,
                            data: SubjectPercentageList,

                            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        }
                    ]
                };
              
    </script>
    <script>
            function PageNav(Page) {
                window.location.href = '/Student/' + Page;
            }
    </script>
    <script>
            var app = angular.module('DashboardMainPage', []);
            app.controller('ReportSubject1', function ($scope) {



                $scope.GetAllData = function () {
                    $http.get('/Student/StudentLogin', {params:{"StudentID":"1" }})
                    .success(function (data, status, headers, config) {
                        $scope.Details = data;

                    })
                }
            });
        
            app.controller('Performingbaddashboard', function ($scope) {
                @{
                    var serializerBadPerforming = new System.Web.Script.Serialization.JavaScriptSerializer();
                    var BadPerformingJson = serializerBadPerforming.Serialize(Model.BadPerformingSubject);
                }
                $scope.PerformingBad =@Html.Raw(BadPerformingJson);
            });
            app.controller('Performinggooddashboard', function ($scope) {

                @{
                    var serializerGoodPerforming = new System.Web.Script.Serialization.JavaScriptSerializer();
                    var GoodPerformingJson = serializerGoodPerforming.Serialize(Model.GoodPerformingSubject);
                }
                $scope.PerformingGood =@Html.Raw(GoodPerformingJson);
            });  
            app.controller('Needtobeconcentrateddashboard', function ($scope) {
                 @{
                     var serializerAveragePerforming = new System.Web.Script.Serialization.JavaScriptSerializer();
                     var AveragePerformingJson = serializerGoodPerforming.Serialize(Model.AveragePerformingSubject);
                 }
                $scope.PerformingAverage =@Html.Raw(AveragePerformingJson);
            });
        app.controller('CompletedTestDashboard', function ($scope) {
                @{
                      var serializerLastFive = new System.Web.Script.Serialization.JavaScriptSerializer();
                      var LastFiveTestjson = serializerLastFive.Serialize(Model.OverallLastFiveTest);
                  }
            
                   $scope.LastTestFiveTestList =@Html.Raw(LastFiveTestjson);
            $scope.TestSummaryPage=function(TestId){
                window.location.href='/Student/TestSummary?TestId='+TestId;
            }
            });
        app.controller('AvailableTestDashboard', function ($scope) {
            //Hello
             
            @{
                    var serializerAvailableTest = new System.Web.Script.Serialization.JavaScriptSerializer();
                    var AvailableTestjson = serializerAvailableTest.Serialize(Model.OverallAvailableTest);
                }
            $scope.AvailableTest =@Html.Raw(AvailableTestjson);
            $scope.WriteTest=function(TestId)
            {
                var TakeTest=confirm("Are you sure want to write Test now");
                if(TakeTest==true){
                    window.location.href = '/Student/Test?TestID=' + TestId;
                }
            };
            });
    </script>
    <style>
        .buttoncss {
            background-color: #808080;
            color: white;
            border: 0.1px solid #555555;
            height: 40px;
            width: 250px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            -webkit-transition-duration: 0.4s;
            transition-duration: 0.4s;
        }

            .buttoncss:hover {
                background-color: black;
                color: white;
            }
    </style>

    @*Heading Header*@
    

    @*Panels*@
    <style>
        .panel-body {
            background-color: #555555;
            color: snow;
        }

        .panel-danger > .panel-heading {
            background-color: #fe1e1e;
            background: -moz-linear-gradient(right, red, #b90000);
            border-color: #b90000;
            color: white;
        }

        .panel-success > .panel-heading {
            background-color: #48a500;
            background: -moz-linear-gradient(right, green, #48a500);
            border-color: #48a500;
            color: white;
        }

        .panel-warning > .panel-heading {
            background-color: #fabf2d;
            background: -moz-linear-gradient(right, yellow, #fabf2d);
            border-color: #fabf2d;
            color: white;
        }
    </style>
    <style>
        div#headavailabletest {
            background-color: cornflowerblue;
            background: -moz-linear-gradient(right, red, #b90000);
            border-color: #b90000;
            color: white;
        }

        div#headlastfive {
            background-color: cornflowerblue;
            background: -moz-linear-gradient(right, green, #48a500);
            border-color: #48a500;
            color: white;
        }
    </style>
    <script>
        function TestSummaryPage(TestID)
        {
            debugger;
            window.location.href='/Student/TestSummary?TestId='+TestID;
        }
    </script>

    <script>
        function WriteTest(TestID)
        {
            var TakeTest=confirm("Are you sure want to write Test now");
            if(TakeTest==true){
                window.location.href = '/Student/Test?TestID=' + TestID;
            }
        }
        function TestSummaryPage(TestID)
        {
            window.location.href='/Student/TestSummary?TestId='+TestID;
        }
    </script>



  
    <div ng-app="DashboardMainPage">
        <h1 style="color:black">Dashboard</h1>
        @*Chart*@
        <div class="col-md-12">
          <div id="canvas-holder2" width="400" height="300">
             <canvas id="canvas"  ></canvas>
          </div>
        </div>
        <div style="margin-top:500px;">
            <div class="col-md-12" style="margin-top:10px;">
                <div class="col-md-6">
                    <div ng-controller="Performinggooddashboard">
                        <div class="panel panel-success">
                            <div class="panel-heading">Performing Good</div>
                            <div class="panel-body">
                                <table>
                                    <tr>
                                        <th>SubjectName</th>
                                        <th>Lesson Nos</th>
                                        <th>LessonName</th>
                                        <th>Percentage</th>
                                        <th>Topic</th>
                                        
                                    </tr>
                                    <tr ng-repeat="x in PerformingGood">
                                        <td><span>{{x.SubjectName}}</span></td>
                                        <td><span>{{x.LessionId}}</span></td>
                                        <td>{{x.LessionName}}</td>
                                        <td><span>{{x.Percentage}}</span></td>
                                        <td><span>{{x.Topic}}</span></td>
                                        
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div ng-controller="Needtobeconcentrateddashboard">
                        <div class="panel panel-warning">
                            <div class="panel-heading">Need to concentrated</div>
                            <div class="panel-body">
                                <table>
                                    <tr>
                                        <th>SubjectName</th>
                                        <th>Lesson Nos</th>
                                        <th>LessionName</th>
                                        <th>Percentage</th>
                                        <th>Topic</th>
                                        
                                       
                                    </tr>
                                    <tr ng-repeat="x in PerformingAverage">
                                        <td><span>{{x.SubjectName}}</span></td>
                                        <td><span>{{x.LessionId}}</span></td>
                                        <td>{{x.LessionName}}</td>
                                        <td><span>{{x.Percentage}}</span></td>
                                        <td><span>{{x.Topic}}</span></td>
                                        
                                        
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                </div>
                <div class="col-md-12">
                    <div ng-controller="Performingbaddashboard">
                        <div class="panel panel-danger">
                            <div class="panel-heading">Highly to be Concentrated</div>
                            <div class="panel-body">
                                <table>
                                    <tr>
                                        <th>Subject Name</th>
                                        <th>Lesson Nos</th>
                                        <th>LessionName</th>
                                        <th>Percentage</th>
                                        <th>Topic</th>
                                       
                                       
                                    </tr>
                                    <tr ng-repeat="x in PerformingBad">
                                        <td><span>{{x.SubjectName}}</span></td>
                                        <td><span>{{x.LessionId}}</span></td>
                                        <td>{{x.LessionName}}</td>
                                        <td><span>{{x.Percentage}}</span></td>
                                        <td><span>{{x.Topic}}</span></td>
                                        
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
       
       
            <div class="col-md-12">
                <div class="col-md-6">
                    <div ng-controller="CompletedTestDashboard">
                        <div class="panel panel-danger">
                            <div class="panel-heading" id="headlastfive">Last Five Test</div>
                            <div class="panel-body">
                                <table>
                                    <tr>
                                        <th>Subject Name</th>
                                        <th>Test Type</th>
                                        <th>Percentage</th>
                                        <th>Test Summary</th>
                                    </tr>
                                    <tr ng-repeat="x in LastTestFiveTestList">
                                        <td><span>{{x.SubjectName}}</span></td>
                                        <td>{{x.TestType}}</td>
                                        <td><span>{{x.Percentage}}</span></td>
                                        <td><button ng-click="TestSummaryPage(x.TestId)" style="background-color:#808080;border-color:#808080">Get Detail</button></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
              <div class="col-md-6">
                    <div ng-controller="AvailableTestDashboard">
                        <div class="panel panel-success">
                            <div class="panel-heading" id="headavailabletest">Available Test</div>
                            <div class="panel-body">
                                <table>
                                    <tr>
                                        <th>Subject name</th>
                                        <th>Lesson</th>
                                        <th>Take Test</th>
                                    </tr>
                                    <tr ng-repeat="x in AvailableTest">
                                        <td><span>{{x.SubjectName}}</span></td>
                                        <td>{{x.TestType}}</td>
                                        <td><button style="background-color:#808080;border-color:#808080" ng-click="WriteTest(x.TestId)">Write Test</button></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
       
    </div>
